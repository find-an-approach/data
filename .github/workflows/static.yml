name: Deploy approaches json to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Grab latest release name
        run: curl https://api.github.com/repos/ammaraskar/faa-instrument-approach-db/releases/latest | jq '.tag_name' > /tmp/latest_release.txt
      - id: diff
        continue-on-error: true
        name: Check against current release
        run: diff /tmp/latest_release.txt used_release.txt
      - name: Download new release
        if: steps.diff.outcome == 'failure'
        run: mkdir dist && cd dist && wget "https://github.com/ammaraskar/faa-instrument-approach-db/releases/latest/download/approaches.json"
      - name: Setup Pages
        if: steps.diff.outcome == 'failure'
        uses: actions/configure-pages@v5
      - name: Upload artifact
        if: steps.diff.outcome == 'failure'
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: './dist'
      - name: Deploy to GitHub Pages
        if: steps.diff.outcome == 'failure'
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Commit latest release to repo
        if: steps.diff.outcome == 'failure'
        run: |
          cp /tmp/latest_release.txt used_release.txt
          git config --global user.name 'Find an Approach'
          git config --global user.email 'bot@users.noreply.github.com'
          git add used_release.txt
          git commit -am "Commit latest release"
          git push
